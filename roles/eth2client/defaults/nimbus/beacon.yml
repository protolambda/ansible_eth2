beacon_image_name: protolambda/nimbus:latest

beacon_memory: 3200M
beacon_kernel_memory: 3300M

# Docker manages the logs, don't duplicate them by writing them to a file.
# The file does not get rotated/pruned, so make sure to never store the duplicate data to begin with.
beacon_keystores_file_mode: "0704"  # execute bit, to iterate directory
beacon_user_id: "1000:1000"

beacon_start_args: >
  nimbus_beacon_node
  {% if testnet_type == 'custom' %}
  --network="{{beacon_container_dir}}/custom_testnet_config/nimbus_config.json"
  {% elif testnet_type == 'medalla' %}
  --network=medalla
  {% elif testnet_type == 'altona' %}
  --network=altona
  {% elif testnet_type == 'zinken' %}
  --network=zinken
  {% elif testnet_type == 'toledo' %}
  --network=toledo
  {% elif testnet_type == 'pyrmont' %}
  --network=pyrmont
  {% elif testnet_type == 'mainnet' %}
  --network=mainnet
  {% elif testnet_type == 'prater' %}
  --network=prater
  {% endif %}
  --max-peers="{{hi_peer_count}}"
  --data-dir="{{beacon_container_dir}}"
  --web3-url={{eth1_endpoint.ws}}
  {% if (bootnode_enrs is defined) and bootnode_enrs %}
  --bootstrap-node="{{ bootnode_enrs | join(',') }}"
  {% endif %}
  --udp-port={{beacon_udp_port}}
  --tcp-port={{beacon_tcp_port}}
  --listen-address=0.0.0.0
  --graffiti="{{ validator_graffiti }}"
  --nat="extip:{{public_ip_address}}"
  --log-level="{{ beacon_log_level | upper }}"
  --log-file="/dev/null"
  --rpc --rpc-port={{beacon_rpc_port}} --rpc-address=0.0.0.0
  --metrics --metrics-port={{beacon_metrics_port}} --metrics-address=0.0.0.0
  {% if validator_enabled and (not has_validator_client) %}
    --validators-dir="{{keystores_container_dir}}"
    --secrets-dir="{{secrets_container_dir}}"
  {% else %}
    --validators-dir="{{beacon_container_dir}}/no_bn_keys"
    --secrets-dir="{{beacon_container_dir}}/no_bn_secrets"
  {% endif %}
  {{beacon_extra_opts}}
